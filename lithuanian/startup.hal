event startup
begin
  SetLangMode(LangLithuanian, "LIT", 2);
  
  Register("Item links","Item links",INLinkVc,modWebShopNG);
  Setting("Item link types",INLinkTypeLClass,modWebShopNG);
  Setting("Item Color",ItemColorLClass,modWebShopNG);
  Setting("Bendra prekė",SameItemLClass,modSL);
  Export("Web Registers",WebRegOutEClass,WebRegOutEn,modWebShopNG);
  Setting("Web Export",ItemExportLClass,modSL);
  Setting("iDeal - Bendri nustatymai",iDealSetTClass,modSL);

  Export("IDEAL - Išrašomų PVM s/f registras FR0672",IDEALLitVATRegIVEClass,IDEALLitVATRegIVEn,modSL);
  Export("IDEAL - i.SAF",IDEALLitTaxXmlEClass,IDEALLitTaxXmlEn,modNL); 
  Report("IDEAL - i.SAF",IDEALLitiSAFRClass,IDEALLitiSAFRn,0,modNL); 
  Report("IDEAL - Išrašomų PVM s/f registras FR0672",IDEALSLVATLitRClass,IDEALSLVATLitRn,0,modSL);  
  
  Import("IDEAL - SwedBank import Statement",SwedBankImportSTIClass,SwedBankImportSTIn,modSL);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 29 May 2018 13:04:05
  Import("IDEAL - SEB Bank import Statement",SEBBankImportSTIClass,SEBBankImportSTIn,modSL);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 29 May 2018 13:04:05

	Setting("IDEAL - SwedBank import Statement",SwedbankImportLClass,modSL);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 29 May 2018 13:04:09
	Setting("IDEAL - SEB Bank import Statement",SEBbankImportLClass,modSL);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 29 May 2018 15:36:35
  Setting("IDEAL - Banking Statement Import settings",BankImportSetTClass,modSL);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 9 October 2018 15:59:21
  
  Setting("iDeal - Paste Special",ItemPasteSpecTClass,modSY);
  Setting("iDeal - Reversed VAT Payment Modes",RvrsVATPDTClass,modSL);

  Setting("Prekių eksportas į web",ItemExportTClass,modSL);
  Setting("Superkamų prekių parametras",RetItmTClass,modSL);
  Setting("Pin Pad Counter",PinPadCntLClass,modSL);
  Setting("Rezervacijos",ResListLClass,modSL);
  Setting("Rezervacijos - BROKAI",ResListBrokLClass,modSL);// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 11 April 2018 13:34:09
  Setting("Rezervacijos - DEMO",ResListDemoLClass,modSL);// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 11 April 2018 13:34:09
  Setting("Touchless Payments",TouchlessPaymentTClass,modPOS);
  Setting("iDeal - POS Nustatymai",iDealCashierDefTClass,modPOS);

  Setting("Faktūros laiško nustatymai",IVMailTClass,modPOS);

  SetBegin(14444);
  SetText(0,"Prekės grupė");
  SetText(1,"Prekė");
  SetText(2,"Prekės klasė");
  EndSet;

  SetBegin(14445);
  SetText(kInvoiceRowTypeCashPayment,"Cash");
  SetText(kInvoiceRowTypeCreditCardPayment,"Credit Card");
//  SetText(kInvoiceRowTypeCreditCardPayment,"Debit Card");
  SetText(kInvoiceRowTypeGiftVoucherPayment,"Gift Voucher");
  SetText(kInvoiceRowTypeChequePayment,"#Cheque#");
  SetText(kInvoiceRowTypeLoyaltyPointsPayment,"Loyalty Points");
  SetText(kInvoiceRowTypeSwishPayment,"Swish");
  SetText(99,"Lease");
  EndSet;

  SetBegin(14446);
  SetText(kLocalCCTerminalNone,"None");
  SetText(kLocalCCTerminalBambora,"Bambora");
  SetText(kLocalCCTerminalPCEFTPOS,"PC-EFTPOS (IP)");
  SetText(kLocalCCTerminalRahaxi,"Rahaxi");
  SetText(kLocalCCTerminalSteriaCOM,"SteriaPay (Serial/COM)");
  SetText(kLocalCCTerminalSteriaIP,"SteriaPay (IP)");
  SetText(kLocalCCTerminalVerifoneBanksys,"Verifone (Serial/COM)");
  SetText(kLocalCCTerminalYomaniBanksys,"Yomani banksys (Serial/COM)");
  SetText(201,"Touchless Payments");
//  SetText(kLocalCCTerminalIngenico6550,"Ingenico 6550 (Serial/COM)");//not finished
  EndSet;

  SetBegin(14447);
  SetText(kSerialPortDeviceModelNone,"None");
//  if (HasLocalization("LTU")) then begin
    SetText(kSerialPortDeviceModelPrinterAxiohmA777,"Axiohm A777"); 
//  end;
//  if (HasLocalization("POL")==false) then begin
    SetText(kSerialPortDeviceModelPrinterEPSONTMU210,"Epson TMU210"); 
    SetText(kSerialPortDeviceModelPrinterSTARTSP210,"Star TSP100"); 
    SetText(kSerialPortDeviceModelPrinterEPSONTMT88II,"Epson TM-T88II"); 
    SetText(kSerialPortDeviceModelPrinterBixolonSPPR200II,"Bixolon SPP-R200II"); 
//  end;
//    if (HasLocalization("LVA")) then begin
    SetText(kSerialPortDeviceModelPrinterAxiohmA777,"Axiohm A777"); 
    SetText(kSerialPortDeviceModelPrinterCHD6800,"CHD 6800 (Latvia)"); 
    SetText(kSerialPortDeviceModelVirtualFiscPrinterCHDFMPOS,"CHD Virtual Fiscal Printer (Latvia)"); 
    SetText(kSerialPortDeviceModelFiscPrinterFM32DLL,"Fiscal Printer Brio FM32 with Middle Ware (Latvia)");
    SetText(kSerialPortDeviceModelFiscPrinterFisUSBMDLL,"Fiscal Printer Brio FisUSBM with Middle Ware (Latvia)");
//    end;
  
//  if (HasLocalization("POL")) then begin
    SetText(kSerialPortDeviceModelFiscPrinterPOSNET1,"Fiscal Printer POSNET 1 (Poland, DF301 Protocol)"); 
    SetText(kSerialPortDeviceModelFiscPrinterPOSNET2,"Fiscal Printer POSNET 2 (Poland, DF301 Protocol)"); 
    SetText(kSerialPortDeviceModelFiscPrinterOPTIMUS,"Fiscal Printer OPTIMUS (Poland, DF301 Protocol)"); 
    SetText(kSerialPortDeviceModelFiscPrinterPOSNETThermal5V,"Fiscal Printer POSNET Thermal 5V (Poland), DF301 Protocol"); 
    SetText(kSerialPortDeviceModelFiscPrinterPOSNET,"Fiscal Printer POSNET (Poland, POSNET Protocol)"); 
    SetText(kSerialPortDeviceModelFiscPrinterPOSNETwVATNr,"Fiscal Printer POSNET (Poland, POSNET Protocol w VAT, from 01/10/2013)"); 
    SetText(kSerialPortDeviceModelFiscPrinterPOSNETTCPIP,"Fiscal Printer POSNET HD FV EJ (Poland, POSNET Protocol over TCPIP)"); 
//  end;
//  SetText(kSerialPortDeviceModelFiscPrinterFP2000,"Fiscal Printer FP2000 (Zimbabwe)"); // no code
//  if (HasLocalization("SVK")) then begin
    SetText(kSerialPortDeviceModelFiscPrinterFP3000,"Fiscal Printer FP3000 (Slovakia)"); 
//  end;
//  if (HasLocalization("ARG")) then begin
    SetText(kSerialPortDeviceModelFiscPrinterHASAR,"Fiscal Printer Hasar (Argentina)"); 
//  end;
//  if (HasLocalization("PAN")) then begin
    SetText(kSerialPortDeviceModelFiscPrinterHASARPL23F,"Fiscal Printer Hasar PL23F (Panama)"); 
//  end;
//  if (HasLocalization("ARG")) then begin
    SetText(kSerialPortDeviceModelFiscPrinterEPSON,"Fiscal Printer Epson (Argentina)"); 
//  end;
//  if (HasLocalization("SRB")) then begin
    SetText(kSerialPortDeviceModelFiscPrinterFI550,"Fiscal Printer Fi-550 (Serbia)"); 
//  end;
//  if (HasLocalization("ARG")) then begin
    SetText(kSerialPortDeviceModelFiscPrinterEPSONTMU220,"Fiscal Printer Epson TM-U220 (Argentina)");
//  end;
//  if (HasLocalization("ZWE")) then begin
    SetText(kSerialPortDeviceModelFiscPrinterEPSONTMT81F,"Fiscal Printer Epson TM-T81F (Zimbabwe)");
//  end;
//  if (HasLocalization("KEN")) then begin
    SetText(kSerialPortDeviceModelFiscPrinterTSLFP05,"Fiscal Printer TSL FP05 (Kenya)");
//  end;
//  if (HasLocalization("LTU")) then begin
    SetText(kSerialPortDeviceModelFiscPrinterFB05,"Fiscal Printer Empirija FB05 (Lithuania)");
    SetText(kSerialPortDeviceModelFiscPrinterFB15,"Fiscal Printer Empirija FB15 (Lithuania)");
    SetText(kSerialPortDeviceModelFiscPrinterFB15DLL,"Fiscal Printer Empirija FB15 with Middle Ware (Lithuania)");
    SetText(kSerialPortDeviceModelFiscPrinterST05,"Fiscal Printer Citizen ST-05 (Lithuania)");
//  end;
//  if (HasLocalization("EST")) then begin
    SetText(kSerialPortDeviceModelFiscPrinterFPRINT02K,"Fiscal Printer FPrint 02K");
//  end;
  SetText(kSerialPortDeviceModelFiscPrinterRCHFlea,"Fiscal Printer RCH Flea");
//  SetText(kSerialPortDeviceModelDIGITAG,"Digitag"); 
//  if (HasLocalization("SWE")) then begin
    SetText(kSerialPortDeviceModelFiscPrinterCLEANCASHTypeA,"Clean Cash Type A (Sweden)");
    SetText(kSerialPortDeviceModelFiscPrinterCLEANCASHTypeC,"Clean Cash Type C (Sweden)");
//  end;
  SetText(kSerialPortDeviceModelDisplayGeneric,"Generic Pole Display");
  SetText(kSerialPortDeviceModelDisplayPosiFlex,"Posiflex Pole Display");
//  if (HasLocalization("FIN")) then begin
    SetText(kSerialPortDeviceModelCreditCardTerminalYomaniBanksys,"Credit Card Terminal Yomani Banksys");
    SetText(kSerialPortDeviceModelCreditCardTerminalVerifoneBanksys,"Credit Card Terminal Verifone");
//  end;
//  SetText(kSerialPortDeviceModelCreditCardTerminalIngenico6550,"Credit Card Terminal Ingenico 6550");
  SetText(kSerialPortDeviceModelFiscPrinterBematechMP2100,"Fiscal Printer Bematech MP-2100 TH FI");
  SetText(kSerialPortDeviceModelFiscPrinterEltrade,"Fiscal Printer Eltrade");
  SetText(200,"Fiscal Printer ASPA");
  SetText(201,"Touchless Payments");
  EndSet;

  /*StrSetBegin(584);// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 5 November 2018 18:04:47
  StrSetText(ActVc,"Activities");
  StrSetText(IntProjManActVc,"Project Activities");
  StrSetText(IntProjManToDoActVc,"To Dos");
  StrSetText(KitchenOrderVc,"Kitchen Orders");
  StrSetText(OYVc,"Opportunities");
  StrSetText(PRVc,"Projects");
  StrSetText(QTVc,"Quotations");
  StrSetText(ORVc,"Sales Orders");
  StrSetText(SVOVc,"Service orders");
  StrSetText(POOVc,"Purchase orders");
  EndStrSet;*/
  
  SString(300000,"Kadangi dovanų kupono vertė didesnė nei perkamų prekių, susidariusiam skirtumui padengti reiktų įtraukti papildomą prekę (DKLIKUT - Dovanų kupono neišnaudota likutinė vertė). Jos kaina turi būti tokia, kiek trūksta iki dovanų kupono vertės.");
  SString(300001,"Operacija atšaukta");

  SString(300010,"Prekių grąžinimas");

  StrSetAdd(3);
  StrSetText(DisallowExceedingCreditLimit,"Disallow exceeding Credit Limit");
  StrSetText(StockMovFutureDate,"Neleisti perkėlimų ateities datomis");
  StrSetText(SaveDuplicateVATNr,"Forbid to save Contact with existing Reg. No.");
  EndStrSet;
 
  return;
end;