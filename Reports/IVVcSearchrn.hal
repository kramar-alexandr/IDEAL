external inner function roundmode SetRoundModeD(Integer);
external inner procedure ExtractObjWithSeparator(string,string,Boolean,var Integer,var string);
external inner function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
//VATByBUSTravelRn.hal
event startup
begin
  SetLangMode(LangLithuanian, "LIT", 0);
  Report("Faktðr÷ paieäka",IVVcSearchRClass,IVVcSearchRn,0,modSL);

  return;
end;

event DefineWindows
begin
  real h,v,vm,vs,v2,h2;
  SetLangMode(LangLithuanian, "LIT", 0);
  WindowBegin("Skirtum÷ ataskaita",IVVcSearchRClass,CGRcW,RcType);
  h = 80; v= 6; vs = 20;v2 = 86;h2 = 350;
  SetWRect(20,80,690,400);

  PeriodField(80,v+=20,"Periodas");
 	EditFieldTL(h,v+=vs, 150,"Ieäkoti",M4Str,Normal,20,f1,false,0);
 	CheckBox(h,v+=vs,0,"¯traukti POS faktðras",flags[0]);// Edit ************************** BPI Ukraine - KramarAlexandr - 04, 27 06 2019 y. at 10:46:28 AM

  EndWindow;
  
  return; 
end;

global 
procedure IVVcSearchRClassReportDefaults(Integer wn)// Edit ************************** BPI Ukraine - KramarAlexandr - 04, 27 06 2019 y. at 10:46:26 AM
BEGIN
  record RcVc RepSpec;
  
  DeselectWindow(wn,false);
  GetWindowRecord(wn,RepSpec);
  ReportDefaults(RepSpec,"IVVcSearchRClass");  
  RepSpec.flags[0] = 1;
  PutWindowRecord(wn,RepSpec);
  SelectWindow(wn);
  
  RETURN;
END;

global
procedure IVVcSearchRn(record RcVc RepSpec)
begin
  record IVVc IVr;
  row IVVc IVrw;
  record IVCashVc IVCashr;
  row IVCashVc IVCashrw;
  record LetVc Letr;
  boolean TrHs,testf;
  string 255 tstr;
  integer cnt,rw,i;  
 
  cnt = 0;
  rw = 1;
  StartReportJob(USetStr(13500));
  tstr = RepSpec.f1;
  Header(rw,tstr,1);
  EndHeader;
  if (blank(RepSpec.f1)) then begin
    goto LSearchItemRn;
  end;
  
  StartFormat(15);
		OutString(0,0,"Date",false);
		OutString(60,0,"Fakt. nr.",false);
		OutString(120,0,"Customer",false);
		OutString(1,0,"Item",true);
  EndFormat;
  Gray_Divider(0,1);
  TrHs = true;
  IVr.InvDate = RepSpec.sStartDate;
  while (LoopKey("InvDate",IVr,1,TrHs)) begin
    if IVr.InvDate > RepSpec.sEndDate then begin
      TrHs = false;
    end;
    if (TrHs) then begin
      testf = false;
      RecordNew(Letr);
      cnt = MatRowCnt(IVr);
      for (i=0;i<cnt;i=i+1) begin
        MatRowGet(IVr,i,IVrw);
        AddToText(IVrw.Spec,Letr);
      end;      
      if (StringInText(RepSpec.f1,Letr)) then begin
        testf = true;
      end;
      if (testf) then begin
        StartFormat(15);
        OutString(0,0,IVr.InvDate,false);
        OutString(60,"DblIVVc",IVr.SerNr,false);
        OutString(120,0,IVr.Addr0,false);
        for (i=0;i<cnt;i=i+1) begin
					MatRowGet(IVr,i,IVrw);
					recordnew(Letr);
					AddToText(IVrw.Spec,Letr);
					if (StringInText(RepSpec.f1,Letr)) then begin
						i = cnt;
						OutString(1,0,IVrw.Spec,true);
					end;
				end;      
				
        EndFormat;
      end;
    end;
  end;  
  
  if(RepSpec.flags[0]==1)then begin
  Black_Divider(0,1);
		StartFormat(15);
			OutString(0,0,"Date",false);
			OutString(60,0,"POS Fakt. nr.",false);
			OutString(120,0,"Customer",false);
			OutString(1,0,"Item",true);
		EndFormat;
	
		TrHs = true;
		IVCashr.InvDate = RepSpec.sStartDate;
		while (LoopKey("InvDate",IVCashr,1,TrHs)) begin
			if IVCashr.InvDate > RepSpec.sEndDate then begin
				TrHs = false;
			end;
			if (TrHs) then begin
				testf = false;
				RecordNew(Letr);
				cnt = MatRowCnt(IVCashr);
				for (i=0;i<cnt;i=i+1) begin
					MatRowGet(IVCashr,i,IVCashrw);
					AddToText(IVCashrw.Spec,Letr);
				end;      
				if (StringInText(RepSpec.f1,Letr)) then begin
					testf = true;
				end;
				if (testf) then begin
					StartFormat(15);
					OutString(0,0,IVCashr.InvDate,false);
					OutString(60,"DblIVCashVc",IVCashr.SerNr,false);
					OutString(120,0,IVCashr.Addr0,false);
					for (i=0;i<cnt;i=i+1) begin
						MatRowGet(IVCashr,i,IVCashrw);
						recordnew(Letr);
						AddToText(IVCashrw.Spec,Letr);
						if (StringInText(RepSpec.f1,Letr)) then begin
							i = cnt;
							OutString(1,0,IVCashrw.Spec,true);
						end;
					end;  
					EndFormat;
				end;
			end;
		end;  
	end;
  
  LSearchItemRn:;
  EndJob;
  return;
end;