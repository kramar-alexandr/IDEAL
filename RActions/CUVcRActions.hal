
global
updating function LongInt CUVcRecordCheck(record CUVc CUr,record CUVc CU2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record CUVc lCUr;
  record AccBlock ARRec;

  res = inner.CUVcRecordCheck(CUr,CU2r,stat,long4);

//CHN::setting up RvrsVAT if they are from LIT Country
  if (left(CUr.VATNr,2)=="LT") then begin
    CUr.RvrsVAT = 1;
  end else begin
    CUr.RvrsVAT = 0;
  end;

  if (CUr.NoRvrsVAT==1) then begin
    CUr.RvrsVAT = 0;
  end;

  if (res!=-1) then begin
    if (nonblank(CUr.RegNr1)) then begin
      lCUr.RegNr1 = CUr.RegNr1;
      if (ReadFirstKey("RegNr1",lCUr,1,true)) then begin
        if (lCUr.Code!=CUr.Code) then begin
          BlockLoad(ARRec);
          if (ARRec.NoWarnOnDupVATnoOnCU==0) then begin
    //        MessageBox(1709,": " & lCUr.Code);
          //RecordCheckError(1709,CUr.Code,-1,"RegNr1");
            if (UserCanAction("SaveDuplicateVATNr",false)==true) then begin
              res = -1;
            end;
          end;
        end else begin
          ResetLoop(lCUr);
          lCUr.RegNr1 = CUr.RegNr1;
          if (ReadLastKey("RegNr1",lCUr,1,true)) then begin
            if (lCUr.Code!=CUr.Code) then begin
              BlockLoad(ARRec);
              if (ARRec.NoWarnOnDupVATnoOnCU==0) then begin
  //              MessageBox(1709,": " & lCUr.Code);
  //            RecordCheckError(1709,CUr.Code,-1,"RegNr1");
                if (UserCanAction("SaveDuplicateVATNr",false)==true) then begin
                  res = -1;                
                end;
              end;
            end;
          end;
        end;
      end;
    end;
    if (nonblank(CUr.VATNr)) then begin
      ResetLoop(lCUr);
      lCUr.VATNr = CUr.VATNr;
      if (ReadFirstKey("VATNr",lCUr,1,true)) then begin
        if (lCUr.Code!=CUr.Code) then begin
          BlockLoad(ARRec);
          if (ARRec.NoWarnOnDupVATnoOnCU==0) then begin
    //        MessageBox(1709,": " & lCUr.Code);
          //RecordCheckError(1709,CUr.Code,-1,"RegNr1");
            if (UserCanAction("SaveDuplicateVATNr",false)==true) then begin
              res = -1;
            end;
          end;
        end else begin
          ResetLoop(lCUr);
          lCUr.VATNr = CUr.VATNr;
          if (ReadLastKey("VATNr",lCUr,1,true)) then begin
            if (lCUr.Code!=CUr.Code) then begin
              BlockLoad(ARRec);
              if (ARRec.NoWarnOnDupVATnoOnCU==0) then begin
  //              MessageBox(1709,": " & lCUr.Code);
  //            RecordCheckError(1709,CUr.Code,-1,"RegNr1");
                if (UserCanAction("SaveDuplicateVATNr",false)==true) then begin
                  res = -1;
                end;
              end;
            end;
          end;
        end;
      end;
    end;
  end;

  CUVcRecordCheck = res;
  return;
end;

global
function LongInt CUVcRecordDefaultsClient(LongInt wn,var record CUVc CUr,record CUVc CU2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record iDealSetBlock ISb;

  res = inner.CUVcRecordDefaultsClient(wn,CUr,CU2r,stat,long4);
  BlockLoad(ISb);
  if (ISb.CuVeContactFlag==1) then begin
    if (CUr.VEType==1) then begin
//    CUr.VEType = 1;
      CUr.CUType = 1;
    end;
  end;
  
  CUVcRecordDefaultsClient = res; 
  return;
end;
